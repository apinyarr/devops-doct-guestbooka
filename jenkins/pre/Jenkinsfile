def Environment = "SIT"
def Branch = "develop"
def node = ["PRE":"pre-app", "PRD":"prd-app"]

pipeline {
    agent {
        label "master"
    }

    parameters {
        choice(name: 'Environment', choices: ['PRE','PRD'], description: 'Select Environment.')
        string(name: 'Branch', description: 'Branch name or Tag. Default branch is develop.')
    }

    options {
        // skipDefaultCheckout()
        timeout(time: 5, unit: 'MINUTES')
        timestamps()
    }

    stages {
        stage('Preparation') {
            steps {
                script {
                    echo "********************* Stage: Preparation *********************"
                    echo "--------------------- Step: Reading Environment ---------------------"
                    Environment = params.Environment
                    echo "Environment: ${Environment}"
                    echo "--------------------- Step: Reading Branch ---------------------"
                    if(params.Branch != '') {
                        Branch = params.Branch
                    }
                    echo "Branch/Tag: ${Branch}"
                }
            }
        }

        stage('Deployment') {
            when {
                anyOf {
                    expression { return params.Environment == "PRE" }
                    expression { return params.Environment == "PRD" }
                }
            }

            agent {
                label node["${Environment}"]
            }

            options {
                skipDefaultCheckout()
            }

            environment {
                MONGODB_IP = "192.168.10.12"
            }

            steps {
                script {
                    echo "********************* Stage: ${Environment} Deployment *********************"
                    echo "--------------------- Step: Remove Backup Container ---------------------"
                    sh "docker rm -f guestbooka-backup"
                    echo "==NOTE=="
                    echo "If docker rm shown an error, it is ok because there is no a backup container."

                    echo "--------------------- Step: Pull Guestbook Base Image ---------------------"
                    sh "docker pull apinyarr/guestbooka:${params.Branch}"

                    echo "--------------------- Step: Run Guestbooka Container with Tag ${params.Branch} ---------------------"
                    try {
                        sh "docker stop guestbooka"
                        sh "docker rename guestbooka guestbooka-backup"
                    } catch (Exception e) {
                        echo "Exception occurred: " + e.toString()
                    }
                    sh "docker run -d --name guestbooka -e MONGODB_ADDON_URI=mongodb://${MONGODB_IP}:27017/admin -p 8080:8080 apinyarr/guestbooka:base"
                    currentBuild.description = "Branch: ${params.Branch}"
                }
            }
        }

        stage('Clean Up PRE') {
            when {
                anyOf {
                    expression { return params.Environment == "PRE" }
                    expression { return params.Environment == "PRD" }
                }
            }

            agent {
                label node["${Environment}"]
            }

            options {
                skipDefaultCheckout()
            }

            steps {
                script {
                    echo "********************* Stage: Clean Up *********************"
                    echo "--------------------- Step: Clean Up Work Space ---------------------"
                    cleanWs()
                }
            }
        }
    }
}